
# INTRODUCCIÓN

---
title: "TP1"
subject: "Laboratorio de Datos"
integrantes: "Salvador, Miguel, Thomas"
format: html
editor: visual
---

## Dataframes y Librerías

------------------------------------------------------------------------

Durante esta investigación vamos a trabajar con dos dataframes. Para ello comenzaremos guardándolas en dos variables locales usando el comando read_csv.

```{r}
library(readr)
clima_aeroparque_BA_2022 <- read_csv("Data/Clima_Aeroparque_BA.csv")
View(Clima_Aeroparque_BA)

bike_trips_2022 <- read_csv("Data/trips_2022_reducido.csv")
View(bike_trips_2022)
```

A continuación inicializaremos las librerías que utilizaremos durante este análisis. Notamos que el paquete tidyverse incluye librerías como ggplot2 (visualización de datos), dplyr (manipulación de datos), entre otros.

```{r}
#install.packages("tidyverse")
library(tidyverse)
```

## ANÁLISIS DESCRIPTIVO DE DATAFRAME VIAJES DE ECO-BICIS 2022

------------------------------------------------------------------------

Para este análisis solamente observaremos el comportamiento de aquellos registros cuya duración del viaje este entre 5 minutos a 1 hora, para evitar valores atípicos.

```{r}
bike_trips_2022_5_to_60_min <- bike_trips_2022 %>% 
  filter(between(duracion_recorrido, left = 60*5, right = 60*60))
```

Análisis general del nuevo dataframe de viajes en eco-bicis 2022.

```{r}
summary(bike_trips_2022_5_to_60_min) #ESTO ESTA BIEN PONERLO?
```

### Variables del Dataframe

::: {style="color: white;"}
"X.1" \--\>

"X" \--\>

"Id_recorrido" \--\>

"duracion_recorrido" \--\>

"fecha_origen_recorrido" \--\> establece la fecha y horario de inicio del viaje

"id_estacion_origen" \--\>

"nombre_estacion_origen" \--\>

"direccion_estacion_origen" \--\>

"long_estacion_origen" \--\>

"lat_estacion_origen" \--\>

"fecha_destino_recorrido" \--\>

"id_estacion_destino" \--\>

"nombre_estacion_destino" \--\>

"direccion_estacion_destino" \--\>

"long_estacion_destino" \--\>

"lat_estacion_destino" \--\>

"id_usuario" \--\>

"modelo_bicicleta" \--\>

"Género" \--\>

"fecha" \--\>
:::

------------------------------------------------------------------------

### Visualización de Datos

#### Duración de los recorridos

```{r}
#| label: trip_duration
bike_trips_2022_5_to_60_min %>% 
  mutate(duracion_recorrido = duracion_recorrido/60) %>% 
  ggplot(mapping = aes(x = duracion_recorrido)) +
  geom_histogram(colour = "#E6AC6E", fill = "beige", bins = 11) +
  labs(x = "Duracion", y = "Cantidad", title = "Duracion de los recorridos en minutos")
```

```{r}
bike_trips_2022_5_to_60_min %>% 
  mutate(duracion_recorrido = duracion_recorrido/60) %>% 
  summarise("viaje promedio" = mean(duracion_recorrido), mediana = median(duracion_recorrido))
```

#### Fecha de recorridos

(me gustaria separa por horario)

```{r}
month_trip <- bike_trips_2022_5_to_60_min %>% 
  select(fecha_origen_recorrido) %>% 
  mutate(month = months(fecha_origen_recorrido))
```

```{r}
month_trip %>% 
  ggplot(mapping = aes(x = fct_relevel(month, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")))) +
  geom_bar(fill = "mintcream", colour = "lightskyblue") +
  labs(x = "Mes", y = "Cantidad")
```

#### Estacion de Origen

```{r}
bike_trips_2022_5_to_60_min %>% 
  select(id_estacion_origen, nombre_estacion_origen) %>% 
  group_by(id_estacion_origen, nombre_estacion_origen) %>% 
  summarise(amount_by_station = n()) %>% 
  arrange(desc(amount_by_station))
```

#### Estacion de Destino

```{r}
bike_trips_2022_5_to_60_min %>% 
  select(id_estacion_destino, nombre_estacion_destino) %>% 
  group_by(id_estacion_destino, nombre_estacion_destino) %>% 
  summarise(amount_by_station = n()) %>% 
  arrange(desc(amount_by_station)) 
```

#### Viajes Mas comunes

```{r}
bike_trips_2022_5_to_60_min %>% 
  select(id_estacion_origen, nombre_estacion_origen, id_estacion_destino, nombre_estacion_destino) %>% 
  group_by(id_estacion_origen, nombre_estacion_origen, id_estacion_destino, nombre_estacion_destino) %>% 
  summarise(amount = n()) %>% 
  arrange(desc(amount))
```






#### Mapa Estaciones

(perguntar en clase como se haria un mapa)

```{r}
#install.packages("mapproj")
library(mapproj)
library(maps)

coord_map(projection = "mercator",
  xlim = 40,
  ylim = 50)

# Prepare a map of NZ
#ggplot(map_data("world"), aes(x = long, y = lat, group = group)) +
 # geom_polygon(fill = "white", colour = "black") 

#bike_trips_2022_5_to_60_min %>% 
 # select(long_estacion_origen, lat_estacion_origen) %>% 
 # distinct() %>% 
  #ggplot(mapping = aes(x = long_estacion_origen, y = lat_estacion_origen)) + 
 # geom_point() + 
 # ggplot(map_data("world"), aes(x = long, y = lat, group = group)) +
 # geom_polygon(fill = "white", colour = "black") 
```

```{r}
library(ggplot2)
library(sf)

# Load spatial data for Buenos Aires province (you may need to replace this with your own data)
# This example uses a simplified shapefile of Buenos Aires province from the 'maps' package.
# You can replace this with your own shapefile or spatial data source.
buenos_aires <- st_read(system.file("shape/argentina/", "buenosaires.geojson", package = "sf"))

# Create a ggplot map of Buenos Aires province
buenos_aires_map <- ggplot(buenos_aires) +
  geom_sf() +
  labs(title = "Map of Buenos Aires Province, Argentina") +
  theme_minimal()

# Use coord_quickmap() to create the map with the appropriate aspect ratio
buenos_aires_map + coord_quickmap()
```

#### Modelo de Bicicleta

```{r}
bike_trips_2022_5_to_60_min %>% 
  select(modelo_bicicleta) %>% 
  ggplot(mapping = aes(x = modelo_bicicleta, fill = modelo_bicicleta)) +
  geom_bar()
```

#### Genero

```{r}
bike_trips_2022_5_to_60_min %>% 
  select(Género) %>% 
  filter(!is.na(Género)) %>% 
  ggplot(mapping = aes(x = Género, fill = Género)) + 
  geom_bar()
```



## ANÁLISIS DESCRIPTIVO DE DATAFRAME VIAJES DE CLIMA AEROPARQUE 2022

```{r}
summary(clima_aeroparque_BA_2022)
```


Separamos por mes
```{r}
month_climate <- clima_aeroparque_BA_2022 %>% 
  mutate(month = months(date))
```


#### Clima durante el year
como hago para hacer una linea que pase por los puntos
```{r}
month_climate %>% 
  select(tmin, tmax, tavg, month) %>% 
  group_by(month) %>% 
  summarise(tmin_by_month = mean(tmin), tmax_by_month = mean(tmax), tavg_by_month = mean(tavg)) %>% 
  ggplot(mapping = aes(x = fct_relevel(month, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")), y = tmax_by_month)) +
  geom_point(colour = "red", size = 4) +
  geom_point(aes(x = fct_relevel(month, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")), y = tmin_by_month), color = "blue", size = 4)

month_climate %>% ggplot(mapping = aes(x = date, y = tmax)) +
  geom_line(colour = "red") +
  geom_line(aes(y = tmin), colour = "blue")

```

#### Precipitaciones durante el year
Fijarse si en febrero no hay datos atipicos
```{r}
month_climate %>% 
  group_by(month) %>% 
  filter(!is.na(prcp)) %>% 
  summarise(precipitation_by_month = mean(prcp)) %>% 
  ggplot(mapping = aes(x = fct_relevel(month, c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")), y = precipitation_by_month)) +
  geom_col(fill = "lightgoldenrod2", colour = "lightseagreen")
```


